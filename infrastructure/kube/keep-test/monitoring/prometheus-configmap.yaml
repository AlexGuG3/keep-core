---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: monitoring
  name: prometheus
  labels:
    name: prometheus-conf
    app: prometheus
data:
  prometheus.rules: |-
    groups:
    - name: demo alert
      rules:
      - alert: High Pod Memory
        expr: sum(container_memory_usage_bytes) > 1
        for: 1m
        labels:
          severity: slack
        annotations:
          summary: High Memory Usage
  external-clients-targets.yml: |-
    - targets:
      - bst-a01.test.keep.boar.network:9601
      - keep-validator-0.eks-ap-northeast-2-secure.staging.staked.cloud:9601
      - bootstrap-alpha.test.threshold.p2p.org:9601
  prometheus.yml: |-
    global:
      scrape_interval: 5s
      evaluation_interval: 5s
    rule_files:
      - /etc/prometheus/prometheus.rules
    alerting:
      alertmanagers:
      - scheme: http
        static_configs:
        - targets:
          - "alertmanager.monitoring.svc:9093"

    scrape_configs:
    - job_name: external-clients
      metrics_path: /metrics
      scheme: http
      file_sd_configs:
        - files:
            - 'external-clients-targets.yml'
    - job_name: internal-clients
      honor_timestamps: true
      metrics_path: /metrics
      scheme: http
      follow_redirects: true
      enable_http2: true
      kubernetes_sd_configs:
      - role: service
        follow_redirects: true
        enable_http2: true
        namespaces:
          names:
          - default
        selectors:
        - role: service
          label: "app=keep"
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_port_name]
        separator: ;
        regex: metrics
        replacement: $1
        action: keep
    - job_name: node-exporter
      honor_timestamps: true
      scrape_interval: 5s
      scrape_timeout: 5s
      metrics_path: /metrics
      scheme: http
      follow_redirects: true
      enable_http2: true
      relabel_configs:
      - source_labels: [__meta_kubernetes_endpoints_name]
        separator: ;
        regex: node-exporter
        replacement: $1
        action: keep
      kubernetes_sd_configs:
      - role: endpoints
        kubeconfig_file: ""
        follow_redirects: true
        enable_http2: true
    - job_name: kubernetes-apiservers
      honor_timestamps: true
      scrape_interval: 5s
      scrape_timeout: 5s
      metrics_path: /metrics
      scheme: https
      authorization:
        type: Bearer
        credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: false
      follow_redirects: true
      enable_http2: true
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        separator: ;
        regex: default;kubernetes;https
        replacement: $1
        action: keep
      kubernetes_sd_configs:
      - role: endpoints
        kubeconfig_file: ""
        follow_redirects: true
        enable_http2: true
    - job_name: kubernetes-nodes
      honor_timestamps: true
      scrape_interval: 5s
      scrape_timeout: 5s
      metrics_path: /metrics
      scheme: https
      authorization:
        type: Bearer
        credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: false
      follow_redirects: true
      enable_http2: true
      relabel_configs:
      - separator: ;
        regex: __meta_kubernetes_node_label_(.+)
        replacement: $1
        action: labelmap
      - separator: ;
        regex: (.*)
        target_label: __address__
        replacement: kubernetes.default.svc:443
        action: replace
      - source_labels: [__meta_kubernetes_node_name]
        separator: ;
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics
        action: replace
      kubernetes_sd_configs:
      - role: node
        kubeconfig_file: ""
        follow_redirects: true
        enable_http2: true
    - job_name: kubernetes-pods
      honor_timestamps: true
      scrape_interval: 5s
      scrape_timeout: 5s
      metrics_path: /metrics
      scheme: http
      follow_redirects: true
      enable_http2: true
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app]
        separator: ;
        regex: (geth|keep|grafana|prometheus)
        replacement: $1
        action: keep
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        separator: ;
        regex: (.+)
        target_label: __metrics_path__
        replacement: $1
        action: replace
      - separator: ;
        regex: __meta_kubernetes_pod_label_(.+)
        replacement: $1
        action: labelmap
      - source_labels: [__meta_kubernetes_namespace]
        separator: ;
        regex: (.*)
        target_label: kubernetes_namespace
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_pod_name]
        separator: ;
        regex: (.*)
        target_label: kubernetes_pod_name
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_pod_name]
        separator: ;
        regex: (.*)
        target_label: kubernetes_pod_name_monitoring
        replacement: ${1}.default.svc.cluster.local:9601
        action: replace
      kubernetes_sd_configs:
      - role: pod
        kubeconfig_file: ""
        follow_redirects: true
        enable_http2: true
    - job_name: grafana
      honor_timestamps: true
      scrape_interval: 5s
      scrape_timeout: 5s
      metrics_path: /metrics
      scheme: http
      follow_redirects: true
      enable_http2: true
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app]
        separator: ;
        regex: grafana.*
        replacement: $1
        action: keep
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        separator: ;
        regex: (.+)
        target_label: __metrics_path__
        replacement: $1
        action: replace
      - separator: ;
        regex: __meta_kubernetes_pod_label_(.+)
        replacement: $1
        action: labelmap
      - source_labels: [__meta_kubernetes_namespace]
        separator: ;
        regex: (.*)
        target_label: kubernetes_namespace
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_pod_name]
        separator: ;
        regex: (.*)
        target_label: kubernetes_pod_name
        replacement: $1
        action: replace
      kubernetes_sd_configs:
      - role: pod
        kubeconfig_file: ""
        follow_redirects: true
        enable_http2: true
    - job_name: prometheus
      honor_timestamps: true
      scrape_interval: 5s
      scrape_timeout: 5s
      metrics_path: /metrics
      scheme: http
      follow_redirects: true
      enable_http2: true
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app]
        separator: ;
        regex: prometheus.*
        replacement: $1
        action: keep
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        separator: ;
        regex: (.+)
        target_label: __metrics_path__
        replacement: $1
        action: replace
      - separator: ;
        regex: __meta_kubernetes_pod_label_(.+)
        replacement: $1
        action: labelmap
      - source_labels: [__meta_kubernetes_namespace]
        separator: ;
        regex: (.*)
        target_label: kubernetes_namespace
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_pod_name]
        separator: ;
        regex: (.*)
        target_label: kubernetes_pod_name
        replacement: $1
        action: replace
      kubernetes_sd_configs:
      - role: pod
        kubeconfig_file: ""
        follow_redirects: true
        enable_http2: true
    - job_name: kube-state-metrics
      honor_timestamps: true
      scrape_interval: 5s
      scrape_timeout: 5s
      metrics_path: /metrics
      scheme: http
      follow_redirects: true
      enable_http2: true
      static_configs:
      - targets:
        - kube-state-metrics.kube-system.svc.cluster.local:8080
    - job_name: kubernetes-cadvisor
      honor_timestamps: true
      scrape_interval: 5s
      scrape_timeout: 5s
      metrics_path: /metrics
      scheme: https
      authorization:
        type: Bearer
        credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: false
      follow_redirects: true
      enable_http2: true
      relabel_configs:
      - separator: ;
        regex: __meta_kubernetes_node_label_(.+)
        replacement: $1
        action: labelmap
      - separator: ;
        regex: (.*)
        target_label: __address__
        replacement: kubernetes.default.svc:443
        action: replace
      - source_labels: [__meta_kubernetes_node_name]
        separator: ;
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
        action: replace
      kubernetes_sd_configs:
      - role: node
        kubeconfig_file: ""
        follow_redirects: true
        enable_http2: true
    - job_name: kubernetes-service-endpoints
      honor_timestamps: true
      scrape_interval: 5s
      scrape_timeout: 5s
      metrics_path: /metrics
      scheme: http
      follow_redirects: true
      enable_http2: true
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        separator: ;
        regex: "true"
        replacement: $1
        action: keep
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        separator: ;
        regex: (https?)
        target_label: __scheme__
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        separator: ;
        regex: (.+)
        target_label: __metrics_path__
        replacement: $1
        action: replace
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        separator: ;
        regex: ([^:]+)(?::\d+)?;(\d+)
        target_label: __address__
        replacement: $1:$2
        action: replace
      - separator: ;
        regex: __meta_kubernetes_service_label_(.+)
        replacement: $1
        action: labelmap
      - source_labels: [__meta_kubernetes_namespace]
        separator: ;
        regex: (.*)
        target_label: kubernetes_namespace
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_service_name]
        separator: ;
        regex: (.*)
        target_label: kubernetes_name
        replacement: $1
        action: replace
      kubernetes_sd_configs:
      - role: endpoints
        kubeconfig_file: ""
        follow_redirects: true
        enable_http2: true
