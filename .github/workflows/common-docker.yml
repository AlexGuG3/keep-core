name: Docker

on:
  workflow_call:
    inputs:
      environment:
        description: Environment (network) for workflow execution
        required: false
        type: string
      download-artifact-name:
        required: true
        type: string
      download-artifact-path:
        required: true
        type: string
      download-artifact-tar:
        description: Set to true if provided `download-artifact-path` is compressed tar file
        required: true
        default: false
        type: boolean
      image-name:
        description: Docker image name
        required: true
        type: string
      image-push:
        required: true
        default: false
        type: boolean
      image-context:
        required: true
        type: string
    secrets:
      gcr-json-key:
        description: JSON key for Google Container Registry service account (required if image-push is true)
        required: false

jobs:
  docker-build-and-publish:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        if: inputs.download-artifact-tar != true
        with:
          name: ${{ inputs.download-artifact-name }}
          path: ${{ inputs.download-artifact-path }}

      - uses: actions/download-artifact@v3
        if: inputs.download-artifact-tar == true
        with:
          name: ${{ inputs.download-artifact-name }}

      - name: Extract artifacts for docker container build
        if: inputs.download-artifact-tar == true
        run: |
          tar -xvf ${{ inputs.download-artifact-path }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Load environment variables
        if: inputs.image-push == true
        uses: keep-network/ci/actions/load-env-variables@v2
        with:
          environment: ${{ inputs.environment }}

      - name: Login to Google Container Registry
        if: inputs.image-push == true
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GCR_REGISTRY_URL }}
          username: _json_key
          password: ${{ secrets.gcr-json-key }}

      - name: Set Docker image name
        if: inputs.image-push != true
        run: |
          echo "IMAGE_NAME=${{ inputs.image-name }}" >> $GITHUB_ENV

      - name: Set Docker image name for GCR
        if: inputs.image-push == true
        run: |
          echo "IMAGE_NAME=${{ env.GCR_REGISTRY_URL }}/${{ env.GOOGLE_PROJECT_ID }}/${{ inputs.image-name }}" >> $GITHUB_ENV

      - name: Build and publish image
        uses: docker/build-push-action@v2
        with:
          context: ${{ inputs.image-context }}
          # GCR image should be named according to following convention:
          # HOSTNAME/PROJECT-ID/IMAGE:TAG
          # We don't use TAG yet, will be added at later stages of work on RFC-18.
          tags: ${{ env.IMAGE_NAME }}
          labels: |
            revision=${{ github.sha }}
          push: ${{ inputs.image-push }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
