apiVersion: extensions/v1beta1 
kind: Deployment
metadata:
  name: {{ template "geth.fullname" . }}-miner-deployment
  labels:
    app: {{ template "geth.name" . }}-miner-deployment
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.miner.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "geth.name" . }}-miner
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "geth.name" . }}-miner
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: genesis
          image: {{ .Values.miner.image.repository }}:{{ .Values.miner.image.tag }}
          command: [ "geth", "init", "/var/geth/genesis.json"]
          volumeMounts:
            - name: config
              mountPath: /var/geth
        - name: get-bootnode
          image: {{ .Values.miner.image.repository }}:{{ .Values.miner.image.tag }}
          command: ["/bin/sh", "-c", "apk add --no-cache curl; until nslookup ${BOOTNODE_SERVICE}; do echo waiting for bootnode to be ready; sleep 2; done; curl -m 5 -s ${BOOTNODE_SERVICE} | xargs echo -n >> /data/bootnodes;"]
          env:
            - name: BOOTNODE_SERVICE
              value: {{ template "geth.fullname" . }}-bootnode-service.{{ .Release.Namespace }}
          volumeMounts:
            - name: datadir
              mountPath: /data
      containers:
        - name: miner
          image: {{ .Values.miner.image.repository }}:{{ .Values.miner.image.tag }}
          command: ["/bin/sh"]
          args:
            - "-c"
            - "geth --mine --verbosity=5 \
            --etherbase=0x627306090abab3a6e1400e9345bc60c78a8bef57 --networkid=1101 \
            --bootnodes=`cat /data/bootnodes` \
            --ethstats=${HOSTNAME}:${MONITOR_SECRET}@${MONITOR_SERVICE}"
          env:
            - name: MONITOR_SERVICE
              value: {{ template "geth.fullname" . }}-monitor-service.{{ .Release.Namespace }}
            - name: MONITOR_SECRET
              value: {{ .Values.monitor.secret }}
          ports:
            - name: discovery-udp
              containerPort: 30303
              protocol: UDP
            - name: discovery-tcp
              containerPort: 30303
          volumeMounts:
            - name: datadir
              mountPath: /data
            - name: config
              mountPath: /var/geth
      volumes:
        - name: datadir
          emptyDir: {}
        - name: config 
          configMap:
            name: {{ template "geth.fullname" . }}-config
