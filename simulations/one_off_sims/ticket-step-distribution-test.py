#%% Change working directory from the workspace root to the ipynb file location. Turn this addition off with the DataScience.changeDirOnImportExport setting
import os
try:
	os.chdir(os.path.join(os.getcwd(), 'keep-core/simulations'))
	print(os.getcwd())
except:
	pass

#%%
import numpy as np
import matplotlib.pyplot as plt
total_tickets =0.5*100*10000
print("Total Tickets=" + str(total_tickets))
tickets = np.random.random_sample(int(total_tickets))

#%% [markdown]
# Total tickets above is the area under the triangle generated by 1/2 * # nodes * max virtual stakers owned by a node
# Ticket values are generated using a random sample
# 
# In the code below iterates through 100 stakers and assignes ownership of a set of tickets to each node and then counts the number of tickets below the threshold. 
# 
# The threshold was decided through trial and error to arrive at a group size of ~100
# I believe this is sufficient to prove that the group ownership will be proportional to the number of virtual stakers owned by the a node.

#%%
winning_tickets = []
i = 0
i_val =[]
j_val =[]
for j in range(0,100,1):
    winning_tickets.append(sum(tickets[i:i+100*j]<0.00025))
    i_val.append(i)
    j_val.append(j*100)
    i = i+100*j
    j +=1
print(i)
print(sum(winning_tickets))


#%%
ind = np.arange(len(winning_tickets))
hist3 = plt.bar(ind, j_val)


#%%
ind = np.arange(len(winning_tickets))
hist = plt.bar(ind,winning_tickets)


#%%



