package result

import (
	"fmt"
	"math/big"
)

// Type is an enumeration of protocol execution result types.
type Type int

// Protocol execution result types.
const (
	NoFaultFailure Type = iota
	FailureDQ           // protocol execution failed with disqualified members
	PerfectSuccess      // protocol execution succeeded with no disqualified or inactive members
	SuccessIA           // protocol execution succeeded with inactive members
	SuccessDQ           // protocol execution succeeded with disqualified members
	MixedSuccess        // protocol execution succeeded with inactive and disqualified members
)

// Result of distributed key generation protocol.
//
// Success means that the protocol execution finished with acceptable number of
// disqualified or inactive members. The group of remaining members should be
// added to the signing groups for the threshold relay.
//
// Failure means that the group creation could not finish, due to either the number
// of inactive or disqualified participants, or the presented results being
// disputed in a way where the correct outcome cannot be ascertained.
type Result struct {
	// Result type from enumerated set of values.
	Type Type
	// Group public key generated by protocol execution.
	GroupPublicKey *big.Int `json:"pubkey"`
	// Disqualified members IDs.
	Disqualified []int `json:"disqualified"`
	// Inactive members IDs.
	Inactive []int `json:"inactive"`
}

// Bytes returns the result as a byte slice.
func (r *Result) Bytes() []byte {
	return []byte(fmt.Sprintf("%v", r))
}
